{"version":3,"sources":["utility/hooks/useCounterTimer.js","views/pages/student/test/CountDownTimer.js","views/pages/student/test/MainTestHeader.js","views/pages/student/test/MainTest.js","views/pages/student/test/MainTestFooter.js","views/pages/student/test/Index.js"],"names":["getReturnValues","countDown","Math","floor","CountdownTimer","targetDate","countDownDate","Date","getTime","useState","setCountDown","useEffect","interval","setInterval","clearInterval","useCounterTimer","days","hours","minutes","seconds","MySwal","withReactContent","Swal","MainTestJHeader","fontInc","fontReset","fontDec","history","useHistory","useSelector","state","exam","examData","currentSelectedQuestion","currentSelectedSubject","questionByID","currentActiveSection","deadLineExam","startedTimer","localiazedQuestions","instructionsData","instructions","dispatch","useDispatch","dateTimeAfterDeadline","setDateTimeAfterDeadline","modal","setModal","toggle","EnglishSubjectQuestions","useMemo","questionnaire","filter","item","subject_name","MathsSubjectQuestions","ScienceSubjectQuestions","ReadingSubjectQuestions","SetTimeDeadline","NOW_IN_MS","getMintueForSubject","findAllInstruction","subject","time_duration","handleSetDeadLineExam","handleStartedTimer","GetAllQuestionsBySubjectRequest","handleEndSection","fire","title","icon","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","result","value","text","handleEndSectionClick","handleEndExamSession","TemporyResultRequest","type","Temp_Quiz_Data","push","className","ListGroup","horizontal","ListGroupItem","disabled","Button","Ripple","outline","color","size","onClick","e","preventDefault","handleSelectQuestionPrev","queryString","question_number","GetQuestionByParamsStudentRequest","Modal","isOpen","ModalHeader","ModalBody","Table","scope","subjectsCount","English","map","question","Badge","pill","flag","_id","Maths","Reading","Science","ModalFooter","handleSelectQuestionNext","FlagQuestionBySubjectRequest","questionnaire_id","ButtonGroup","id","UncontrolledTooltip","placement","target","MainTest","fontSize","checkedOption","setCheckedOption","Options","options","filteredInstrunctions","localAns","submited_ans","localStorage","getItem","questionsData","forEach","subject_id","submited_answered","setTimeout","storedLocaliazedQuestions","Row","Col","lg","md","length","instruction","style","description","Label","pointerEvents","config","removePlugins","toolbar","editor","ClassicEditor","data","Object","entries","key","CustomInput","name","block","defaultValue","onChange","handleSelectAnswerByStudent","handleLocalizedQuestion","handleOptionsChange","checked","MainTestFooter","window","location","search","split","handleClickOnPagination","handleSelectQuestion","handleSelectSubject","handleGetQuestionByID","handleSectionInfoPagination","Pagination","PaginationItem","PaginationLink","first","href","active","last","Test","isRowVisible","flaggedQuestion","queryData","setQueryString","setFontSize","queryStr","keys","encodeURIComponent","join","handleQueryChange","GetAllInstrunctionsByStudentRequest","addEventListener","handleBeforeUnload","resetExamSlice","removeEventListener","message","returnValue","MainTestHeader"],"mappings":"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","file":"static/js/53.d24f6a6f.chunk.js","sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\r\n\r\n// const useCounterTimer = (setMin = 0) => {\r\n// \tconst Ref = useRef(null);\r\n// \tconst [timer, setTimer] = useState('00:00');\r\n// \tconst getTimeRemaining = (e) => {\r\n// \t\tconst total = Date.parse(e) - Date.parse(new Date());\r\n// \t\tconst seconds = Math.floor((total / 1000) % 60);\r\n// \t\tconst minutes = Math.floor((total / 1000 / 60) % 60);\r\n// \t\tconst hours = Math.floor(((total / 1000) * 60 * 60) % 24);\r\n// \t\treturn {\r\n// \t\t\ttotal,\r\n// \t\t\thours,\r\n// \t\t\tminutes,\r\n// \t\t\tseconds,\r\n// \t\t};\r\n// \t};\r\n// \tconst startTimer = (e) => {\r\n// \t\tlet { total, hours, minutes, seconds } = getTimeRemaining(e);\r\n// \t\tif (total >= 0) {\r\n// \t\t\tsetTimer(\r\n// \t\t\t\t(minutes > 9 ? minutes : '0' + minutes) + ':' + (seconds > 9 ? seconds : '0' + seconds)\r\n// \t\t\t);\r\n// \t\t}\r\n// \t};\r\n// \tconst clearTimer = (e) => {\r\n// \t\tif (Ref.current) clearInterval(Ref.current);\r\n// \t\tconst id = setInterval(() => {\r\n// \t\t\tstartTimer(e);\r\n// \t\t}, 1000);\r\n// \t\tRef.current = id;\r\n// \t};\r\n// \tconst getDeadTime = () => {\r\n// \t\tlet deadline = new Date();\r\n// \t\t// deadline.setSeconds(deadline.getSeconds() + 60 * 60);\r\n// \t\tdeadline.setMinutes(deadline.getMinutes() + setMin);\r\n// \t\treturn deadline;\r\n// \t};\r\n// \tuseEffect(() => {\r\n// \t\tclearTimer(getDeadTime());\r\n// \t}, []);\r\n// \t// const onClickReset = () => {\r\n// \t// \tclearTimer(getDeadTime());\r\n// \t// };\r\n// \treturn { timer };\r\n// };\r\n// export default useCounterTimer;\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useCounterTimer = (targetDate) => {\r\n\tconst countDownDate = new Date(targetDate).getTime();\r\n\r\n\tconst [countDown, setCountDown] = useState(countDownDate - new Date().getTime());\r\n\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\tsetCountDown(countDownDate - new Date().getTime());\r\n\t\t}, 1000);\r\n\r\n\t\treturn () => clearInterval(interval);\r\n\t}, [countDownDate]);\r\n\r\n\treturn getReturnValues(countDown);\r\n};\r\n\r\nconst getReturnValues = (countDown) => {\r\n\t// calculate time left\r\n\tconst days = Math.floor(countDown / (1000 * 60 * 60 * 24));\r\n\tconst hours = Math.floor((countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n\tconst minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\r\n\tconst seconds = Math.floor((countDown % (1000 * 60)) / 1000);\r\n\r\n\treturn [days, hours, minutes, seconds];\r\n};\r\n\r\nexport { useCounterTimer };\r\n","import { useCounterTimer } from '../../../../utility/hooks/useCounterTimer';\r\n\r\nconst CountdownTimer = ({ targetDate }) => {\r\n\tconst [days, hours, minutes, seconds] = useCounterTimer(targetDate);\r\n\r\n\tif (days + hours + minutes + seconds <= 0) {\r\n\t\treturn '00:00';\r\n\t} else {\r\n\t\treturn `${minutes > 9 ? minutes : '0' + minutes}:${seconds > 9 ? seconds : '0' + seconds}`;\r\n\t}\r\n};\r\n\r\nexport default CountdownTimer;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport {\r\n\tArrowLeftCircle,\r\n\tArrowRightCircle,\r\n\tZoomIn,\r\n\tZoomOut,\r\n\tRotateCcw,\r\n\tClock,\r\n} from 'react-feather';\r\nimport {\r\n\tBadge,\r\n\tButton,\r\n\tButtonGroup,\r\n\tListGroup,\r\n\tListGroupItem,\r\n\tModal,\r\n\tModalBody,\r\n\tModalFooter,\r\n\tModalHeader,\r\n\tTable,\r\n\tUncontrolledTooltip,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n\tFlagQuestionBySubjectRequest,\r\n\tGetAllQuestionsBySubjectRequest,\r\n\tGetQuestionByParamsStudentRequest,\r\n\thandleEndSectionClick,\r\n\thandleSelectQuestionNext,\r\n\thandleSelectQuestionPrev,\r\n\thandleSetDeadLineExam,\r\n\thandleStartedTimer,\r\n\tTemporyResultRequest,\r\n} from '../../../../redux/examSlice';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport CountdownTimer from './CountDownTimer';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nfunction MainTestJHeader({ fontInc, fontReset, fontDec }) {\r\n\tconst history = useHistory();\r\n\tconst {\r\n\t\texamData,\r\n\t\tcurrentSelectedQuestion,\r\n\t\tcurrentSelectedSubject,\r\n\t\tquestionByID,\r\n\t\tcurrentActiveSection,\r\n\t\tdeadLineExam,\r\n\t\tstartedTimer,\r\n\t\tlocaliazedQuestions,\r\n\t} = useSelector((state) => state.exam);\r\n\tconst { instructionsData } = useSelector((state) => state.instructions);\r\n\tconst dispatch = useDispatch();\r\n\tconst [dateTimeAfterDeadline, setDateTimeAfterDeadline] = useState(0);\r\n\tconst [modal, setModal] = useState(false);\r\n\tconst toggle = () => setModal(!modal);\r\n\r\n\tconst EnglishSubjectQuestions = useMemo(() => {\r\n\t\treturn examData?.questionnaire?.filter((item) => item.subject_name === 'English');\r\n\t}, [examData]);\r\n\r\n\tconst MathsSubjectQuestions = useMemo(() => {\r\n\t\treturn examData?.questionnaire?.filter((item) => item.subject_name === 'Maths');\r\n\t}, [examData]);\r\n\r\n\tconst ScienceSubjectQuestions = useMemo(() => {\r\n\t\treturn examData?.questionnaire?.filter((item) => item.subject_name === 'Science');\r\n\t}, [examData]);\r\n\r\n\tconst ReadingSubjectQuestions = useMemo(() => {\r\n\t\treturn examData?.questionnaire?.filter((item) => item.subject_name === 'Reading');\r\n\t}, [examData]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// SET THE TIME HERE\r\n\t\tif (startedTimer) {\r\n\t\t\tconst SetTimeDeadline = deadLineExam * 60 * 1000;\r\n\t\t\tconst NOW_IN_MS = new Date().getTime();\r\n\t\t\tsetDateTimeAfterDeadline(NOW_IN_MS + SetTimeDeadline);\r\n\t\t} else if (currentActiveSection === 'Break-15min') {\r\n\t\t\tconst SetTimeDeadline = 15 * 60 * 1000;\r\n\t\t\tconst NOW_IN_MS = new Date().getTime();\r\n\t\t\tsetDateTimeAfterDeadline(NOW_IN_MS + SetTimeDeadline);\r\n\t\t} else {\r\n\t\t\t// SET DEFAULT TIME 0 MINUTE\r\n\t\t\tconst NOW_IN_MS = new Date().getTime();\r\n\t\t\tsetDateTimeAfterDeadline(NOW_IN_MS + 0);\r\n\t\t}\r\n\t}, [startedTimer, deadLineExam, currentActiveSection]);\r\n\r\n\tconst getMintueForSubject = useMemo(\r\n\t\t() =>\r\n\t\t\tinstructionsData?.findAllInstruction?.filter(\r\n\t\t\t\t(subject) => subject.subject_name === currentActiveSection\r\n\t\t\t)[0]?.time_duration,\r\n\t\t[instructionsData, currentActiveSection]\r\n\t);\r\n\tuseEffect(() => {\r\n\t\tif (!startedTimer && currentSelectedQuestion !== 0) {\r\n\t\t\tdispatch(handleSetDeadLineExam(getMintueForSubject));\r\n\t\t\tdispatch(handleStartedTimer(true));\r\n\t\t}\r\n\t}, [currentSelectedQuestion, startedTimer]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(GetAllQuestionsBySubjectRequest());\r\n\t}, [dispatch]);\r\n\r\n\tconst handlePrevButton = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (currentSelectedQuestion > 1) {\r\n\t\t\tdispatch(handleSelectQuestionPrev());\r\n\t\t\tconst queryString = `question_number=${questionByID.question_number - 1}&subject_name=${\r\n\t\t\t\tquestionByID.subject_name\r\n\t\t\t}`;\r\n\t\t\tdispatch(GetQuestionByParamsStudentRequest(queryString));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleNextButton = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (currentSelectedQuestion === 0) {\r\n\t\t\tdispatch(handleSelectQuestionNext());\r\n\t\t\tconst queryString = `question_number=${1}&subject_name=${currentActiveSection}`;\r\n\t\t\tdispatch(GetQuestionByParamsStudentRequest(queryString));\r\n\t\t}\r\n\t\tif (currentSelectedQuestion >= 1) {\r\n\t\t\tdispatch(handleSelectQuestionNext());\r\n\t\t\tconst queryString = `question_number=${questionByID.question_number + 1}&subject_name=${\r\n\t\t\t\tquestionByID.subject_name\r\n\t\t\t}`;\r\n\t\t\tdispatch(GetQuestionByParamsStudentRequest(queryString));\r\n\t\t}\r\n\t};\r\n\tconst handleFlagButtonClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(\r\n\t\t\tFlagQuestionBySubjectRequest({\r\n\t\t\t\tquestionnaire_id: questionByID._id,\r\n\t\t\t})\r\n\t\t);\r\n\t\tconst queryString = `question_number=${questionByID.question_number}&subject_name=${questionByID.subject_name}`;\r\n\t\tdispatch(GetQuestionByParamsStudentRequest(queryString));\r\n\t};\r\n\r\n\tconst handleEndSection = async () => {\r\n\t\treturn MySwal.fire({\r\n\t\t\ttitle: 'Are you sure?',\r\n\t\t\t// text: 'You would not be able to revert this!',\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonText: 'Yes, End the Section !',\r\n\t\t\tcustomClass: {\r\n\t\t\t\tconfirmButton: 'btn text-white main-color-btn',\r\n\t\t\t\tcancelButton: 'btn btn-outline-danger ml-1',\r\n\t\t\t},\r\n\t\t\tbuttonsStyling: false,\r\n\t\t}).then(async function (result) {\r\n\t\t\tif (result.value) {\r\n\t\t\t\tMySwal.fire({\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\ttitle: 'End Section!',\r\n\t\t\t\t\ttext: 'Your Section has been Ended.',\r\n\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\tconfirmButton: 'btn btn-success',\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tdispatch(handleEndSectionClick(currentSelectedSubject));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleEndExamSession = async () => {\r\n\t\treturn MySwal.fire({\r\n\t\t\ttitle: 'Are you sure?',\r\n\t\t\t// text: 'You would not be able to revert this!',\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonText: 'Yes, End the Session !',\r\n\t\t\tcustomClass: {\r\n\t\t\t\tconfirmButton: 'btn text-white main-color-btn',\r\n\t\t\t\tcancelButton: 'btn btn-outline-danger ml-1',\r\n\t\t\t},\r\n\t\t\tbuttonsStyling: false,\r\n\t\t}).then(async function (result) {\r\n\t\t\tif (result.value) {\r\n\t\t\t\tMySwal.fire({\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\ttitle: 'End Session!',\r\n\t\t\t\t\ttext: 'Your Session has been Ended.',\r\n\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\tconfirmButton: 'btn btn-success',\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tTemporyResultRequest({\r\n\t\t\t\t\t\ttype: 'end',\r\n\t\t\t\t\t\tTemp_Quiz_Data: localiazedQuestions,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\r\n\t\t\t\thistory.push('/student/results');\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"bg-dark text-light test-footer-bar main-test-header\">\r\n\t\t\t\t<ListGroup horizontal>\r\n\t\t\t\t\t<ListGroupItem disabled={currentSelectedQuestion <= 1}>\r\n\t\t\t\t\t\t<Button.Ripple\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tclassName=\"round\"\r\n\t\t\t\t\t\t\tcolor=\"secondary text-white\"\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tonClick={handlePrevButton}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ArrowLeftCircle size={16} />\r\n\t\t\t\t\t\t\t<span className=\"align-middle ms-25\">Previous</span>\r\n\t\t\t\t\t\t</Button.Ripple>\r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t\t<Button.Ripple\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tclassName=\"round\"\r\n\t\t\t\t\t\t\tcolor=\"secondary text-white\"\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tonClick={toggle}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"align-middle ms-25\">Nav</span>\r\n\t\t\t\t\t\t</Button.Ripple>\r\n\t\t\t\t\t\t<Modal isOpen={modal} toggle={toggle} className=\"modal-dialog-centered modal-lg\">\r\n\t\t\t\t\t\t\t<ModalHeader className=\"bg-transparent\" toggle={toggle}>\r\n\t\t\t\t\t\t\t\tITEM NAVIGATION\r\n\t\t\t\t\t\t\t</ModalHeader>\r\n\t\t\t\t\t\t\t<ModalBody className=\"instruction-modal-body\">\r\n\t\t\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\" className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t#\r\n\t\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <th scope=\"col\" className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tStatus\r\n\t\t\t\t\t\t\t\t\t\t\t</th> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\" className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tFlagged\r\n\t\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</thead>\r\n\r\n\t\t\t\t\t\t\t\t\t{examData?.subjectsCount?.English && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">info</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">English</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{EnglishSubjectQuestions?.map((question) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody key={question._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">{question?.question_number}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge pill color=\"light-primary\" className=\"me-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnanswered\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion && question.flag === '1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'light-primary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'light-secondary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{question && question.flag == 1 ? 'Yes' : 'No'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{examData?.subjectsCount?.Maths && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">info</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">Maths</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{MathsSubjectQuestions?.map((question) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody key={question._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">{question?.question_number}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge pill color=\"light-primary\" className=\"me-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnanswered\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion && question.flag === '1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'light-primary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'light-secondary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{question && question.flag == 1 ? 'Yes' : 'No'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{examData?.subjectsCount?.Reading && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">info</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">Reading</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{ReadingSubjectQuestions?.map((question) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody key={question._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">{question?.question_number}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge pill color=\"light-primary\" className=\"me-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnanswered\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* color=\"light-primary\" */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion && question.flag === '1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'light-primary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'light-secondary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{question && question.flag == 1 ? 'Yes' : 'No'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{examData?.subjectsCount?.Science && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">info</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">Science</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{ScienceSubjectQuestions?.map((question) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody key={question._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">{question?.question_number}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge pill color=\"light-primary\" className=\"me-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnanswered\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-nowrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpill\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion && question.flag === '1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'light-primary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'light-secondary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{question && question.flag == 1 ? 'Yes' : 'No'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t\t\t<Button color=\"danger\" onClick={toggle} outline>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t\t<Button.Ripple\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tclassName=\"round\"\r\n\t\t\t\t\t\t\tcolor=\"secondary text-white\"\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tonClick={handleNextButton}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"align-middle ms-25\">Next</span>\r\n\t\t\t\t\t\t\t<ArrowRightCircle size={16} />\r\n\t\t\t\t\t\t</Button.Ripple>\r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t\t<ListGroup horizontal>\r\n\t\t\t\t\t<ListGroupItem>Manage Assesments</ListGroupItem>\r\n\t\t\t\t\t<ListGroupItem\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thandleEndSection();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tEnd Section\r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t<ListGroupItem onClick={handleFlagButtonClick}>Flag</ListGroupItem>\r\n\t\t\t\t\t{/* <ListGroupItem>\r\n\t\t\t\t\t\t<UncontrolledDropdown>\r\n\t\t\t\t\t\t\t<DropdownToggle caret>\r\n\t\t\t\t\t\t\t\t<Tool size={16} />\r\n\t\t\t\t\t\t\t\tTools\r\n\t\t\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t\t\t<DropdownItem>Header</DropdownItem>\r\n\t\t\t\t\t\t\t\t<DropdownItem>Another Action</DropdownItem>\r\n\t\t\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t\t\t</UncontrolledDropdown>\r\n\t\t\t\t\t</ListGroupItem> */}\r\n\r\n\t\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t\t<ButtonGroup className=\"zoom-btngroup\">\r\n\t\t\t\t\t\t\t<Button onClick={() => fontInc()} id=\"zoom-in-btn\">\r\n\t\t\t\t\t\t\t\t<ZoomIn size={16} />\r\n\t\t\t\t\t\t\t\t<UncontrolledTooltip placement=\"bottom\" target=\"zoom-in-btn\">\r\n\t\t\t\t\t\t\t\t\tZoom In\r\n\t\t\t\t\t\t\t\t</UncontrolledTooltip>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button onClick={() => fontReset()} id=\"reset-btn\">\r\n\t\t\t\t\t\t\t\t<RotateCcw size={16} />\r\n\t\t\t\t\t\t\t\t<UncontrolledTooltip placement=\"bottom\" target=\"reset-btn\">\r\n\t\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t\t</UncontrolledTooltip>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button onClick={() => fontDec()} id=\"zoom-out-btn\">\r\n\t\t\t\t\t\t\t\t<ZoomOut size={16} />\r\n\t\t\t\t\t\t\t\t<UncontrolledTooltip placement=\"bottom\" target=\"zoom-out-btn\">\r\n\t\t\t\t\t\t\t\t\tZoom Out\r\n\t\t\t\t\t\t\t\t</UncontrolledTooltip>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t<ListGroupItem onClick={handleEndExamSession}>End Session</ListGroupItem>\r\n\t\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t\t<Button className=\"timer-btn\">\r\n\t\t\t\t\t\t\t<Clock size={16} />\r\n\t\t\t\t\t\t\t{/* {timer} */}\r\n\t\t\t\t\t\t\t<CountdownTimer targetDate={dateTimeAfterDeadline} />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default MainTestJHeader;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, CustomInput, Label } from 'reactstrap';\r\nimport {\r\n\tstoredLocaliazedQuestions,\r\n\thandleLocalizedQuestion,\r\n\thandleSelectAnswerByStudent,\r\n} from '../../../../redux/examSlice';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from 'ckeditor5-classic-with-mathtype';\r\nimport ClassicEditor from '@blowstack/ckeditor5-full-free-build';\r\n\r\nfunction MainTest({ fontSize }) {\r\n\tconst dispatch = useDispatch();\r\n\tconst { instructionsData } = useSelector((state) => state.instructions);\r\n\tconst {\r\n\t\tcurrentSelectedSubject,\r\n\t\tcurrentSelectedQuestion,\r\n\t\tquestionByID,\r\n\t\texamData,\r\n\t\tlocaliazedQuestions,\r\n\t} = useSelector((state) => state.exam);\r\n\tconst [checkedOption, setCheckedOption] = useState('');\r\n\tconst Options = questionByID?.options[0];\r\n\r\n\tconst filteredInstrunctions = useMemo(() => {\r\n\t\treturn instructionsData?.findAllInstruction?.filter(\r\n\t\t\t(item) => item.subject_name === currentSelectedSubject\r\n\t\t);\r\n\t}, [instructionsData, currentSelectedSubject]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst localAns = localiazedQuestions?.filter(\r\n\t\t\t(item) => item.questionnaire_id === questionByID?._id\r\n\t\t)[0]?.submited_ans;\r\n\t\tsetCheckedOption(localAns);\r\n\t}, [localiazedQuestions, questionByID]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (localStorage.getItem('QuestionsList') === null && examData?.questionnaire) {\r\n\t\t\tconst questionsData = [];\r\n\t\t\texamData?.questionnaire?.forEach((question) =>\r\n\t\t\t\tquestionsData.push({\r\n\t\t\t\t\tsubject_id: question.subject_id,\r\n\t\t\t\t\tquestionnaire_id: question._id,\r\n\t\t\t\t\tsubmited_ans: '',\r\n\t\t\t\t\tsubmited_answered: '',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tsetTimeout(() => dispatch(storedLocaliazedQuestions(questionsData)), 300);\r\n\t\t\t// localStorage.setItem('QuestionsList', JSON.stringify(questionsData));\r\n\t\t}\r\n\t}, [examData, dispatch]);\r\n\r\n\tconst handleOptionsChange = (key, value) => {\r\n\t\tsetCheckedOption(value);\r\n\t\tdispatch(handleSelectAnswerByStudent({ key, value }));\r\n\t\tdispatch(handleLocalizedQuestion(questionByID._id));\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"main-test\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg=\"6\" md=\"6\" className=\"main-test-col\">\r\n\t\t\t\t\t{currentSelectedQuestion === 0 ? (\r\n\t\t\t\t\t\tfilteredInstrunctions?.length > 0 &&\r\n\t\t\t\t\t\tfilteredInstrunctions?.map((instruction) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={instruction._id}\r\n\t\t\t\t\t\t\t\tclassName=\"question-list\"\r\n\t\t\t\t\t\t\t\tstyle={{ fontSize: `${fontSize}px` }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{instruction?.description}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Label style={{ fontSize: `${fontSize}px`, pointerEvents: 'none' }} className=\"mt-1\">\r\n\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\tconfig={{\r\n\t\t\t\t\t\t\t\t\tremovePlugins: ['Title', 'toolbar'],\r\n\t\t\t\t\t\t\t\t\ttoolbar: [],\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\tdata={questionByID?.question}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t// <div className=\"question-list\" style={{ fontSize: `${fontSize}px` }}>\r\n\t\t\t\t\t\t// \t{questionByID?.question}\r\n\t\t\t\t\t\t// </div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col lg=\"6\" md=\"6\" className=\"answer-list-col\">\r\n\t\t\t\t\t{currentSelectedQuestion !== 0 && (\r\n\t\t\t\t\t\t<div className=\"answer-list\">\r\n\t\t\t\t\t\t\t{Options &&\r\n\t\t\t\t\t\t\t\tObject.entries(Options)?.map(([key, value]) => (\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center \" key={key}>\r\n\t\t\t\t\t\t\t\t\t\t<CustomInput\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\tid={`option${key}`}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"is_type\"\r\n\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-flex pl-3 mt-1\"\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={value}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => handleOptionsChange(key, value)}\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={value == checkedOption ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: `${fontSize}px`, pointerEvents: 'none' }}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-1\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\tconfig={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tremovePlugins: ['Title', 'toolbar'],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttoolbar: [],\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata={value}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default MainTest;\r\n","import React, { useMemo } from 'react';\r\nimport { Flag } from 'react-feather';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PaginationItem, Pagination, PaginationLink } from 'reactstrap';\r\nimport {\r\n\thandleGetQuestionByID,\r\n\thandleSelectQuestion,\r\n\thandleSelectSubject,\r\n} from '../../../../redux/examSlice';\r\n\r\nfunction MainTestFooter() {\r\n\tconst dispatch = useDispatch();\r\n\tlet checkSubject =\r\n\t\twindow.location.search.split('=')[window.location.search.split('=').length - 1];\r\n\r\n\tconst { examData, currentSelectedQuestion, currentSelectedSubject, currentActiveSection } =\r\n\t\tuseSelector((state) => state.exam);\r\n\r\n\tconst EnglishSubjectQuestions = useMemo(() => {\r\n\t\treturn examData?.questionnaire?.filter((item) => item.subject_name === 'English');\r\n\t}, [examData]);\r\n\tconst MathsSubjectQuestions = useMemo(() => {\r\n\t\treturn examData?.questionnaire?.filter((item) => item.subject_name === 'Maths');\r\n\t}, [examData]);\r\n\tconst ScienceSubjectQuestions = useMemo(() => {\r\n\t\treturn examData?.questionnaire?.filter((item) => item.subject_name === 'Science');\r\n\t}, [examData]);\r\n\tconst ReadingSubjectQuestions = useMemo(() => {\r\n\t\treturn examData?.questionnaire?.filter((item) => item.subject_name === 'Reading');\r\n\t}, [examData]);\r\n\r\n\tconst handleClickOnPagination = (e, data) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(handleSelectQuestion(data.question_number));\r\n\t\tdispatch(handleSelectSubject(data.subject_name));\r\n\t\tdispatch(handleGetQuestionByID(data._id));\r\n\t};\r\n\r\n\tconst handleSectionInfoPagination = (e, data) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(handleSelectQuestion(0));\r\n\t\tdispatch(handleSelectSubject(data.subject_name));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* <PaginationItem className=\"flag-active\">\r\n\t\t\t\t\t<Flag size={10} />\r\n\t\t\t\t\t<PaginationLink href=\"#\" className=\"active\">\r\n\t\t\t\t\t\t1\r\n\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t</PaginationItem> */}\r\n\t\t\t<Pagination aria-label=\"Page navigation example\" className=\"test-pagination\" size=\"sm\">\r\n\t\t\t\t<PaginationItem>\r\n\t\t\t\t\t<PaginationLink first href=\"#\" />\r\n\t\t\t\t</PaginationItem>\r\n\r\n\t\t\t\t<>\r\n\t\t\t\t\t{examData?.subjectsCount?.English && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\t\tdisabled={currentActiveSection !== 'English'}\r\n\t\t\t\t\t\t\t\tactive={\r\n\t\t\t\t\t\t\t\t\tcurrentSelectedQuestion === 0 &&\r\n\t\t\t\t\t\t\t\t\tcurrentSelectedSubject === 'English' &&\r\n\t\t\t\t\t\t\t\t\tcurrentActiveSection === 'English'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<PaginationLink\r\n\t\t\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\t\t\tonClick={(e) =>\r\n\t\t\t\t\t\t\t\t\t\thandleSectionInfoPagination(e, {\r\n\t\t\t\t\t\t\t\t\t\t\tsubject_name: 'English',\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEnglish Section Info\r\n\t\t\t\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t\t{EnglishSubjectQuestions?.map((question) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\t\t\t\tkey={question._id}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={currentActiveSection !== 'English'}\r\n\t\t\t\t\t\t\t\t\t\tactive={\r\n\t\t\t\t\t\t\t\t\t\t\tquestion.question_number === currentSelectedQuestion &&\r\n\t\t\t\t\t\t\t\t\t\t\tcurrentSelectedSubject === 'English'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"flag-active\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{question?.flag === '1' && <Flag size={16} />}\r\n\t\t\t\t\t\t\t\t\t\t<PaginationLink href=\"#\" onClick={(e) => handleClickOnPagination(e, question)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{question.question_number}\r\n\t\t\t\t\t\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\r\n\t\t\t\t{examData?.subjectsCount?.Maths && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tdisabled={currentActiveSection !== 'Maths'}\r\n\t\t\t\t\t\t\tactive={\r\n\t\t\t\t\t\t\t\tcurrentSelectedQuestion === 0 &&\r\n\t\t\t\t\t\t\t\tcurrentSelectedSubject === 'Maths' &&\r\n\t\t\t\t\t\t\t\tcurrentActiveSection === 'Maths'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PaginationLink\r\n\t\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\t\tonClick={(e) =>\r\n\t\t\t\t\t\t\t\t\thandleSectionInfoPagination(e, {\r\n\t\t\t\t\t\t\t\t\t\tsubject_name: 'Maths',\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMaths Section Info\r\n\t\t\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t{MathsSubjectQuestions?.map((question) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\t\t\tkey={question._id}\r\n\t\t\t\t\t\t\t\t\tdisabled={currentActiveSection !== 'Maths'}\r\n\t\t\t\t\t\t\t\t\tactive={\r\n\t\t\t\t\t\t\t\t\t\tquestion.question_number === currentSelectedQuestion &&\r\n\t\t\t\t\t\t\t\t\t\tcurrentSelectedSubject === 'Maths'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"flag-active\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{question?.flag === '1' && <Flag size={16} />}\r\n\t\t\t\t\t\t\t\t\t<PaginationLink href=\"#\" onClick={(e) => handleClickOnPagination(e, question)}>\r\n\t\t\t\t\t\t\t\t\t\t{question.question_number}\r\n\t\t\t\t\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<PaginationItem\r\n\t\t\t\t\tdisabled={currentActiveSection !== 'Break-15min'}\r\n\t\t\t\t\tactive={\r\n\t\t\t\t\t\tcurrentSelectedQuestion === 0 &&\r\n\t\t\t\t\t\tcurrentSelectedSubject === 'Break-15min' &&\r\n\t\t\t\t\t\tcurrentActiveSection === 'Break-15min'\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<PaginationLink\r\n\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\tonClick={(e) =>\r\n\t\t\t\t\t\t\thandleSectionInfoPagination(e, {\r\n\t\t\t\t\t\t\t\tsubject_name: 'Break-15min',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBreak 15 Min\r\n\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t</PaginationItem>\r\n\r\n\t\t\t\t{examData?.subjectsCount?.Reading && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tdisabled={currentActiveSection !== 'Reading'}\r\n\t\t\t\t\t\t\tactive={\r\n\t\t\t\t\t\t\t\tcurrentSelectedQuestion === 0 &&\r\n\t\t\t\t\t\t\t\tcurrentSelectedSubject === 'Reading' &&\r\n\t\t\t\t\t\t\t\tcurrentActiveSection === 'Reading'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PaginationLink\r\n\t\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\t\tonClick={(e) =>\r\n\t\t\t\t\t\t\t\t\thandleSectionInfoPagination(e, {\r\n\t\t\t\t\t\t\t\t\t\tsubject_name: 'Reading',\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tReading Section Info\r\n\t\t\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t{ReadingSubjectQuestions?.map((question) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\t\t\tkey={question._id}\r\n\t\t\t\t\t\t\t\t\tdisabled={currentActiveSection !== 'Reading'}\r\n\t\t\t\t\t\t\t\t\tactive={\r\n\t\t\t\t\t\t\t\t\t\tquestion.question_number === currentSelectedQuestion &&\r\n\t\t\t\t\t\t\t\t\t\tcurrentSelectedSubject === 'Reading'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"flag-active\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{question?.flag === '1' && <Flag size={16} />}\r\n\t\t\t\t\t\t\t\t\t<PaginationLink href=\"#\" onClick={(e) => handleClickOnPagination(e, question)}>\r\n\t\t\t\t\t\t\t\t\t\t{question.question_number}\r\n\t\t\t\t\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{examData?.subjectsCount?.Science && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\tdisabled={currentActiveSection !== 'Science'}\r\n\t\t\t\t\t\t\tactive={\r\n\t\t\t\t\t\t\t\tcurrentSelectedQuestion === 0 &&\r\n\t\t\t\t\t\t\t\tcurrentSelectedSubject === 'Science' &&\r\n\t\t\t\t\t\t\t\tcurrentActiveSection === 'Science'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PaginationLink\r\n\t\t\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\t\t\tonClick={(e) =>\r\n\t\t\t\t\t\t\t\t\thandleSectionInfoPagination(e, {\r\n\t\t\t\t\t\t\t\t\t\tsubject_name: 'Science',\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tScience Section Info\r\n\t\t\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t{ScienceSubjectQuestions?.map((question) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<PaginationItem\r\n\t\t\t\t\t\t\t\t\tkey={question._id}\r\n\t\t\t\t\t\t\t\t\tdisabled={currentActiveSection !== 'Science'}\r\n\t\t\t\t\t\t\t\t\tactive={\r\n\t\t\t\t\t\t\t\t\t\tquestion.question_number === currentSelectedQuestion &&\r\n\t\t\t\t\t\t\t\t\t\tcurrentSelectedSubject === 'Science'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"flag-active\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{question?.flag === '1' && <Flag size={16} />}\r\n\t\t\t\t\t\t\t\t\t<PaginationLink href=\"#\" onClick={(e) => handleClickOnPagination(e, question)}>\r\n\t\t\t\t\t\t\t\t\t\t{question.question_number}\r\n\t\t\t\t\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<PaginationItem>\r\n\t\t\t\t\t<PaginationLink href=\"#\" last />\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t</Pagination>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default MainTestFooter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainTestHeader from './MainTestHeader';\r\nimport MainTest from './MainTest';\r\nimport MainTestFooter from './MainTestFooter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetAllQuestionsBySubjectRequest, resetExamSlice } from '../../../../redux/examSlice';\r\nimport { GetAllInstrunctionsByStudentRequest } from '../../../../redux/instructionsSlice';\r\n\r\nfunction Test({ isRowVisible }) {\r\n\tconst { flaggedQuestion } = useSelector((state) => state.exam);\r\n\tconst dispatch = useDispatch();\r\n\tconst [queryData, setQueryData] = useState({\r\n\t\tquestion_number: '',\r\n\t\tsubject_name: '',\r\n\t});\r\n\tconst [queryString, setQueryString] = useState(\r\n\t\t`question_number=${queryData.question_number}&subject_name=${queryData.subject_name}`\r\n\t);\r\n\tconst [fontSize, setFontSize] = useState(14);\r\n\r\n\tconst fontInc = () => {\r\n\t\tif (fontSize < 28) {\r\n\t\t\tsetFontSize((fontSize) => fontSize + 4);\r\n\t\t}\r\n\t};\r\n\tconst fontDec = () => {\r\n\t\tif (fontSize > 10) {\r\n\t\t\tsetFontSize((fontSize) => fontSize - 4);\r\n\t\t}\r\n\t};\r\n\tconst fontReset = () => {\r\n\t\tsetFontSize(14);\r\n\t};\r\n\r\n\tconst handleQueryChange = (data) => {\r\n\t\tlet queryStr = Object.keys(data)\r\n\t\t\t.map((key) => {\r\n\t\t\t\treturn encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\r\n\t\t\t})\r\n\t\t\t.join('&');\r\n\t\tsetQueryString(queryStr);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\thandleQueryChange(queryData);\r\n\t}, [queryData]);\r\n\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tconst handleChangeQueryData = ({ question_number, subject_name }) => {\r\n\t\tsetQueryData({ question_number, subject_name });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(GetAllInstrunctionsByStudentRequest());\r\n\t}, [dispatch]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(GetAllQuestionsBySubjectRequest(queryString));\r\n\t}, [dispatch, queryString, flaggedQuestion]);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('beforeunload', handleBeforeUnload);\r\n\t\treturn () => {\r\n\t\t\tdispatch(resetExamSlice());\r\n\t\t\twindow.removeEventListener('beforeunload', handleBeforeUnload);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst handleBeforeUnload = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst message = 'Are you sure you want to leave? All provided data will be lost.';\r\n\t\te.returnValue = message;\r\n\t\treturn message;\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"main-test-sec\">\r\n\t\t\t<MainTestHeader fontInc={fontInc} fontDec={fontDec} fontReset={fontReset} />\r\n\t\t\t<MainTest fontSize={fontSize} />\r\n\t\t\t<MainTestFooter />\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Test;\r\n"],"sourceRoot":""}